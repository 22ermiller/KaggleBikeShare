"revised_program" = "revised_program",
"date" = "real_lda_floor")) %>%
left_join(drop_df,
by = c("bus_name" = "bus_name",
"revised_program" = "revised_program",
"date" = "real_lda_floor")) %>%
left_join(loa_start_df,
by = c("bus_name" = "bus_name",
"revised_program" = "revised_program",
"date" = "loa_start_floor")) %>%
left_join(loa_end_df,
by = c("bus_name" = "bus_name",
"revised_program" = "revised_program",
"date" = "loa_end_floor")) %>%
left_join(reenroll_df,
by = c("bus_name" = "bus_name",
"revised_program" = "revised_program",
"date" = "reenroll_floor"))
temp_df3 <- adhoc_revised_df %>%
dplyr::select(bus_name,
revised_program,
`Market Size`,
first_date) %>%
mutate(name_program = paste0(bus_name, " - ", revised_program)) %>%
distinct(first_date,
name_program,
bus_name,
revised_program,
`Market Size`)
final_df <- date_sequence_df %>%
left_join(
temp_df3,
by = c(
"name_program" = "name_program",
"revised_program" = "revised_program",
"bus_name" = "bus_name"
)
) %>%
filter(date >= first_date) %>%
group_by(bus_name, revised_program) %>%
arrange(bus_name, revised_program, date) %>%
mutate_at(vars(start_n:reenroll_n), ~ replace(., is.na(.), 0)) %>%
mutate(enrollment_net = start_n - grad_n - drop_n,
loa_dif = loa_start_n - loa_end_n) %>%
mutate(
enrollment_end = cumsum(enrollment_net),
enrollment_start = enrollment_end - enrollment_net,
current_loa = cumsum(loa_dif)
) %>%
ungroup()
final_df2 <- final_df %>%
rename(
School = bus_name,
Date = date,
Program = revised_program,
`New Starts` = start_n,
`Start Enrollment` = enrollment_start,
Reenroll = reenroll_n,
Grads = grad_n,
Drops = drop_n,
`New LOAs` = loa_start_n,
`LOA Ended` = loa_end_n,
`Current LOAs` = current_loa,
`End Enrollment` = enrollment_end
)
my_connection <- dbConnect(drv = odbc::odbc(),
driver = "/opt/microsoft/msodbcsql18/lib64/libmsodbcsql-18.2.so.2.1",
server = "ss-solutions-server.database.windows.net",
database = "CorporateScorecardData",
uid = "staritasolutions",
pwd = "jje&2023FTW")
# Pull From Database ------------------------------------------------------
attendance_df_raw <- my_connection %>% tbl("ScorecardAttendance") %>% collect()
library(janitor)
get_dupes(attendance_df_raw, id)
get_azure_token(resource ="ss-solutions-server.database.windows.net" ,
tenant = "common",
app = "a927ac33-127f-4c6e-9e4b-7074440d344e",
use_cache = FALSE)
library(AzureStor)
library(AzureAuth)
library(odbc)
library(AzureRMR)
tok <- get_azure_token(resource ="ss-solutions-server.database.windows.net" ,
tenant = "common",
app = "a927ac33-127f-4c6e-9e4b-7074440d344e",
use_cache = FALSE)
tok <- get_azure_token(resource ="ss-solutions-server.database.windows.net" ,
tenant = "common",
app = "a927ac33-127f-4c6e-9e4b-7074440d344e",
use_cache = FALSE)
list_azure_tokens()
library(lubridate)
library(odbc)
library(tidyverse)
library(janitor)
# df <- read_csv("~/Downloads/ProgramAttendance.csv")
school_codes <- read_csv("~/Documents/Work/Executive Dashboard/test/Data/school_codes.csv")
my_connection <- dbConnect(drv = odbc::odbc(),
driver = "/opt/microsoft/msodbcsql18/lib64/libmsodbcsql-18.2.so.2.1",
server = "ss-solutions-server.database.windows.net",
database = "CorporateScorecardData",
uid = "staritasolutions",
pwd = "jje&2023FTW")
View(school_codes)
# Pull From Database ------------------------------------------------------
attendance_df_raw <- my_connection %>% tbl("ScorecardAttendance") %>% filter(KissID %in% c(7682, 5778, 5751) %>% collect()
)
# Pull From Database ------------------------------------------------------
attendance_df_raw <- my_connection %>% tbl("ScorecardAttendance") %>% filter(KissID %in% c(7682, 5778, 5751)) %>% collect()
View(attendance_df_raw)
attendance_df <- attendance_df_raw %>%
mutate(BeginningDate = mdy(BeginningDate),
EndDate = mdy(EndDate)) %>%
rename(Beginning_Date = BeginningDate,
End_Date = EndDate,
Kiss_ID = KissID,
Actual_Hours = ActualHours,
Scheduled_Hours = ScheduledHours) %>%
select(-(id))
View(attendance_df)
attendance_df %>% filter(Beginning_Date >= "2023-01-01") %>% group_by(Kiss_ID, Program) %>% summarize(n())
188/30
gc()
library(tidyverse)
program <- read_csv("Documents/Work/Executive Dashboard/MichiganExecDash/Data/program.csv")
school_codes <- read_csv("Documents/Work/Executive Dashboard/MichiganExecDash/Data/school_codes.csv")
azure_db_connection <- dbConnect(drv = odbc::odbc(),
driver = "/opt/microsoft/msodbcsql18/lib64/libmsodbcsql-18.2.so.2.1",
server = "ss-solutions-server.database.windows.net",
database = "CorporateScorecardData",
uid = "staritasolutions",
pwd = "jje&2023FTW")
library(AzureStor)
library(data.table)
library(lubridate)
library(magrittr)
library(dplyr)
library(odbc)
library(tidyr)
azure_db_connection <- dbConnect(drv = odbc::odbc(),
driver = "/opt/microsoft/msodbcsql18/lib64/libmsodbcsql-18.2.so.2.1",
server = "ss-solutions-server.database.windows.net",
database = "CorporateScorecardData",
uid = "staritasolutions",
pwd = "jje&2023FTW")
endp <- storage_endpoint("https://ersdata.blob.core.windows.net",
key = "Nc6Avd2msMkfsLFTGMO24YT94BcYjffF0Pw/AnVZnmcS2fJqthqeEMnbjcMfeqQZwPbWLhoSsT/B+AStTjmBjQ==")
#get specific container
cont <- storage_container(endp, "ersdata")
merged_attendance_df <- azure_db_connection %>% tbl("ScorecardAttendance") %>%
#filter(KissID %in% kiss_ids_to_filter) %>%
collect() %>%
mutate(EndDate = mdy(EndDate)) %>%
mutate(Date = floor_date(EndDate, unit = "month")) %>%
left_join(school_codes, by = c("KissID" = "kiss_id")) %>%
left_join(program, by = "Program") %>%
dplyr::select(-EndDate, -BeginningDate) %>%
group_by(Date, bus_name, revised_program) %>%
summarise(Actual_Hours = sum(ActualHours),
Scheduled_Hours = sum(ScheduledHours)) %>%
ungroup()
adhoc_df <- azure_db_connection %>% tbl("AdHocExports") %>%
#filter(KissID %in% kiss_ids_to_filter) %>%
collect() %>%
rename(
"Acct" = "AccountNum",
"Kiss ID" = "KissID",
"Attend stat" = "AttendStat",
"Tot cost" = "TotalCost",
"Aid exp" = "AidExp",
"Aid Rcv" = "AidRcv",
"Aid Due" = "AidDue",
"Tot hrs" = "TotalHours",
"Sched hrs" = "SchedHours",
"Remain hrs" = "RemainingHours",
"Wk hrs" = "WorkHours",
"Start" = "StartDate",
"Rev grad" = "RevGrad",
"Drop" = "DropDate",
"Leave start" = "LeaveStart",
"Leave end" = "LeaveEnd",
"Reenrolled" = "ReEnrolled",
"Dep stat" = "DepStat"
) %>%
group_by(`Kiss ID`, Acct) %>%
arrange(desc(ImportDate)) %>%
slice_head(n = 1) %>%
ungroup() %>%
left_join(school_codes, by = c("Kiss ID" = "kiss_id")) %>%
left_join(program, by = c("Program" = "Program")) %>%
mutate(WAvg = as.numeric(WAvg),
PAvg = as.numeric(PAvg),
Balance = as.numeric(Balance),
`Tot cost` = as.numeric(`Tot cost`),
`Aid exp` = as.numeric(`Aid exp`),
`Aid Rcv` = as.numeric(`Aid Rcv`),
`Aid Due` = as.numeric(`Aid Due`),
) %>%
mutate(across(Start:Reenrolled, ~as.Date(.)))  %>%
mutate(revised_program = case_when(`Wk hrs` < 24 & revised_program == "Cosmetology"~ "Cosmetology_PT",
`Wk hrs` >= 24 & revised_program == "Cosmetology" ~ "Cosmetology_FT",
TRUE ~ revised_program),
date_pulled = floor_date(ImportDate, "week"))
View(adhoc_df)
unique(adhoc_df$ImportDate)
adhoc <- read_csv("Downloads/AdHocExportFreedom_20230806.csv")
adhoc %>% filter(`Kiss ID` == 5734)
unique(adhoc$`Kiss ID`)
View(school_codes)
merged_attendance_df %>% filter(bus_name == "Rexburg") %>% View()
merged_attendance_df <- azure_db_connection %>% tbl("ScorecardAttendance") %>%
#filter(KissID %in% kiss_ids_to_filter) %>%
collect()
merged_attendance_df %>% filter(KissID == 5734) %>% View()
library(lubridate)
merged_attendance_df %>% filter(KissID == 5734) %>% mutate(Date = mdy(BeginningDate) %>% View()
)
merged_attendance_df %>% filter(KissID == 5734) %>% mutate(Date = mdy(BeginningDate)) %>% View()
scorecard <- read_csv("Documents/Work/Executive Dashboard/test/Data/school_codes.csv")
scorecard <- read_csv("Documents/Work/Executive Dashboard/test/Data/scorecard_data.csv")
scorecard %>% filter(Date >= "2019-01-01") %>% group_by(School, Date) %>% summarize(enrolled = sum(`End Enrollment`)) %>% View()
scorecard %>% filter(Date >= "2019-01-01") %>% group_by(School, Date) %>% summarize(enrolled = sum(`End Enrollment`)) %>% filter(Date == "2019-01-01" | Date == "2023-01-01")
scorecard %>% filter(Date >= "2019-01-01") %>% group_by(School, Date) %>% summarize(enrolled = sum(`End Enrollment`)) %>% filter(Date == "2019-01-01" | Date == "2023-01-01") %>% filter(enrolled == 0)
scorecard %>% filter(Date >= "2019-01-01") %>% group_by(School, Date) %>% summarize(enrolled = sum(`End Enrollment`)) %>% filter(Date == "2019-01-01" | Date == "2023-01-01") %>% filter(enrolled < 5)
filtered_scorecard <- scorecard %>% filter(Date >= "2019-01-01") %>% group_by(School, Date) %>% summarize(enrolled = sum(`End Enrollment`)) %>% filter(Date == "2019-01-01" | Date == "2023-01-01")
unique(filtered_scorecard$School)
View(school_codes)
schools <- tibble(bus_name = unique(filtered_scorecard$School))
anti_join(school_codes, schools, by = "bus_name")
View(filtered_scorecard)
filtered_scorecard <- scorecard %>% filter(Date >= "2019-01-01") %>% group_by(School, Date) %>% summarize(enrolled = sum(`End Enrollment`)) %>% filter(Date == "2019-01-01" | Date == "2023-01-01")
filtered_scorecard <- scorecard %>% filter(Date >= "2019-01-01") %>% group_by(School, Date) %>% summarize(enrolled = sum(`End Enrollment`))
filtered_scorecard <- scorecard %>% filter(Date >= "2019-01-01") %>% group_by(School, Date) %>% summarize(enrolled = sum(`End Enrollment`)) %>% filter(Date == "2019-01-01" & Date == "2023-01-01")
filtered_scorecard <- scorecard %>% filter(Date >= "2019-01-01") %>% group_by(School, Date) %>% summarize(enrolled = sum(`End Enrollment`)) %>% filter(Date == "2019-01-01")
schools <- tibble(bus_name = unique(filtered_scorecard$School))
anti_join(school_codes, schools, by = "bus_name")
View(scorecard)
View(schools)
View(school_codes)
filtered_scorecard <- scorecard %>% filter(Date >= "2019-01-01") %>% group_by(School, Date) %>% summarize(enrolled = sum(`End Enrollment`)) %>% filter(Date == "2023-01-01")
schools <- tibble(bus_name = unique(filtered_scorecard$School))
anti_join(school_codes, schools, by = "bus_name")
library(gmailr)
library(tidyverse)
gm_auth("evan@staritasolutions.com", cache = FALSE)
gm_auth_configure(path = "~/Downloads/official_gmail_client_secret.json")
gm_auth("evan@staritasolutions.com", cache = FALSE)
gm_profile()
library(lubridate)
library(odbc)
library(tidyverse)
library(janitor)
my_connection <- dbConnect(drv = odbc::odbc(),
driver = "/opt/microsoft/msodbcsql18/lib64/libmsodbcsql-18.3.so.1.1",
server = "ss-solutions-server.database.windows.net",
database = "CorporateScorecardData",
uid = "staritasolutions",
pwd = "jje&2023FTW")
library(readr)
school_codes <- read_csv("Documents/Work/Executive Dashboard/CincinnatiExecDash/Data/school_codes.csv")
View(school_codes)
adhoc <- my_connection %>% tbl("AdHocExports") %>% filter(KissID == 5810) %>% collect()
adhoc1 <- adhoc %>%
group_by(`Kiss ID`, Acct) %>%
arrange(desc(ImportDate)) %>%
slice_head(n = 1) %>%
ungroup()
adhoc1 <- adhoc %>%
group_by(KissID) %>%
arrange(desc(ImportDate)) %>%
slice_head(n = 1) %>%
ungroup()
adhoc1 <- adhoc %>%
group_by(AccountNum) %>%
arrange(desc(ImportDate)) %>%
slice_head(n = 1) %>%
ungroup()
adhoc1 %>% filter(AttendStat == "Currently Attending")
View(adhoc1)
library(lubridate)
library(odbc)
library(tidyverse)
library(janitor)
# df <- read_csv("~/Downloads/ProgramAttendance.csv")
school_codes <- read_csv("~/Documents/Work/Executive Dashboard/test/Data/school_codes.csv")
my_connection <- dbConnect(drv = odbc::odbc(),
driver = "/opt/microsoft/msodbcsql18/lib64/libmsodbcsql-18.3.so.1.1",
server = "ss-solutions-server.database.windows.net",
database = "CorporateScorecardData",
uid = "staritasolutions",
pwd = "jje&2023FTW")
my_connection <- dbConnect(drv = odbc::odbc(),
driver = "/opt/microsoft/msodbcsql18/lib64/libmsodbcsql-18.3.so.1.1",
server = "ss-solutions-server.database.windows.net",
database = "CorporateScorecardData",
uid = "staritasolutions",
pwd = "jje&2023FTW")
# Pull From Database ------------------------------------------------------
attendance_df_raw <- my_connection %>% tbl("ScorecardAttendance") %>% collect()
attendance_df <- attendance_df_raw %>%
mutate(BeginningDate = mdy(BeginningDate),
EndDate = mdy(EndDate)) %>%
rename(Beginning_Date = BeginningDate,
End_Date = EndDate,
Kiss_ID = KissID,
Actual_Hours = ActualHours,
Scheduled_Hours = ScheduledHours) %>%
select(-(id))
View(school_codes)
attendance_df %>% filter(Kiss_ID %in% c("5778")) %>% View()
View(school_codes)
attendance_df %>% filter(Kiss_ID %in% c("1065")) %>% View()
attendance_df %>% filter(Kiss_ID %in% c("5778")) %>% View()
attendance_df %>% filter(Kiss_ID %in% c("5751")) %>% View()
library(tidyverse)
crm <- read_csv("Downloads/northstar_crm(2).csv")
View(crm)
?str_detect
crm %>% filter(str_detect(`URL Source`, "GFF"))
crm %>% filter(str_detect(`URL Source`, "gff"))
crm %>%
filter(Lead >= "2023-08-01" & Lead < "2023-09-01") %>%
filter(str_detect(`URL Source`, "gff"))
crm %>%
filter(Lead >= "2023-08-01" & Lead < "2023-09-01" & `School Name` == "Boise") %>%
filter(str_detect(`URL Source`, "gff"))
crm %>%
filter(Lead >= "2023-08-01" & Lead < "2023-09-01" & `School Name` == "Boise") %>%
filter(str_detect(`URL Source`, "gff")) %>%
View()
?str_detect
crm %>%
filter(Lead >= "2023-08-01" & Lead < "2023-09-01" & `School Name` == "Boise") %>%
filter(str_detect(`URL Source`, "gff")) %>%
View()
crm %>%
filter(Lead >= "2023-08-01" & Lead < "2023-09-01") %>%
filter(str_detect(`URL Source`, "gff")) %>%
group_by(`School Name`) %>%
mutate(lead_num = n()) %>%
View()
crm %>%
filter(Lead >= "2023-08-01" & Lead < "2023-09-01") %>%
filter(str_detect(`URL Source`, "gff")) %>%
group_by(`School Name`) %>%
summarize(lead_num = n()) %>%
View()
crm %>%
#filter(Lead >= "2023-08-01" & Lead < "2023-09-01") %>%
filter(str_detect(`URL Source`, "gff")) %>%
group_by(`School Name`) %>%
summarize(lead_num = n()) %>%
View()
crm %>%
# filter(Lead >= "2023-08-01" & Lead < "2023-09-01") %>%
# filter(str_detect(`URL Source`, "gff")) %>%
group_by(`School Name`) %>%
summarize(lead_num = n()) %>%
View()
unique(crm$`School Name`)
library(tidyverse)
crm <- read_csv("Downloads/northstar_crm(3).csv")
crm %>%
filter(Lead >= "2023-08-01" & Lead < "2023-09-01") %>%
filter(str_detect(`URL Source`, "gff")) %>%
group_by(`School Name`) %>%
summarize(lead_num = n()) %>%
View()
crm %>%
filter(Lead >= "2023-08-01" & Lead < "2023-09-01" & `School Name` == "Provo") %>%
filter(str_detect(`URL Source`, "gff")) %>%
)
crm %>%
filter(Lead >= "2023-08-01" & Lead < "2023-09-01" & `School Name` == "P") %>%
filter(str_detect(`URL Source`, "gff"))
crm %>%
filter(Lead >= "2023-08-01" & Lead < "2023-09-01" & `School Name` == "Provo") %>%
filter(str_detect(`URL Source`, "gff"))
crm %>%
filter(Lead >= "2023-08-01" & Lead < "2023-09-01" & `School Name` == "Provo") %>%
filter(str_detect(`URL Source`, "gff")) %>% View()
crm %>%
filter(Lead >= "2023-08-01" & Lead < "2023-09-01" & `School Name` == "Provo") %>%
filter(str_detect(`URL Source`, "gff")) %>%
group_by(`School Name`) %>%
summarize(lead_num = n()) %>%
View()
crm %>%
filter(Lead >= "2023-08-01" & Lead < "2023-09-01") %>%
filter(str_detect(`URL Source`, "gff")) %>%
group_by(`School Name`) %>%
summarize(lead_num = n()) %>%
View()
setwd("~/Documents/Stat 348/KaggleBikeShare")
library(tidyverse)
library(vroom)
bike <- vroom("./train.csv")
glimpse(bike)
skim(bike)
skimr::skim(bike)
library(skimr)
install.packages("skimr")
library(skimr)
skim(bike)
install.packages("DataExplorer")
library(DataExplorer)
plot_histogram(bike)
plot_histogram(bike)
ggplot(data = bike) +
geom_point(mapping = aes(x = temp, y = atemp))
?labs()
ggplot(data = bike) +
geom_point(mapping = aes(x = temp, y = atemp)) +
labs(title = "Collinearity of temp vs 'feels like' temp")
ggplot(data = bike) +
geom_point(mapping = aes(x = temp, y = atemp)) +
labs(title = "Collinearity of Temp vs 'Feels like' Temp",
x = "Temp",
y = "'Feels like' Temp")
ggplot(data = bike) +
geom_point(mapping = aes(x = temp, y = atemp)) +
labs(title = "Collinearity of Temp vs 'Feels like' Temp",
x = "Temp",
y = "'Feels like' Temp")
bike <- vroom("./train.csv") %>%
mutate(weather = as.factor(weather))
ggplot(data = bike) +
geom_bar(mapping = aes(weather))
ggplot(data = bike) +
geom_bar(mapping = aes(weather)) +
labs(title = "Counts of types of Weather",
x = "Weather Type")
GGally::ggpairs(bike)
ggplot(data = bike) +
geom_point(mapping = aes(x = temp, y = count))
ggplot(data = bike) +
geom_boxplot(mapping = aes(x = weather, y = count))
plot_correlation(bike)
glimpse(bike)
skim(bike)
ggplot(data = bike) +
geom_boxplot(mapping = aes(x = weather, y = count, fill = weather))
ggplot(data = bike) +
geom_bar(mapping = aes(weather)) +
labs(title = "Counts of types of Weather",
x = "Weather Type")
ggplot(data = bike) +
geom_bar(mapping = aes(weather, fill = weather)) +
labs(title = "Counts of types of Weather",
x = "Weather Type")
ggplot(data = bike) +
geom_point(mapping = aes(x = temp, y = atemp)) +
labs(title = "Collinearity of Temp vs 'Feels like' Temp",
x = "Temp",
y = "'Feels like' Temp")
# correlation plot
plot_correlation(bike)
ggplot(data = bike) +
geom_point(mapping = aes(x = temp, y = atemp)) +
labs(title = "Collinearity of Temp vs 'Feels like' Temp",
x = "Temp",
y = "'Feels like' Temp")
ggplot(data = bike) +
geom_bar(mapping = aes(weather, fill = weather)) +
labs(title = "Counts of types of Weather",
x = "Weather Type")
ggplot(data = bike) +
geom_boxplot(mapping = aes(x = weather, y = count, fill = weather))
library(patchwork)
# correlation plot
correlation_plot <- plot_correlation(bike)
temp_graph <- ggplot(data = bike) +
geom_point(mapping = aes(x = temp, y = atemp)) +
labs(title = "Collinearity of Temp vs 'Feels like' Temp",
x = "Temp",
y = "'Feels like' Temp")
weather_counts <- ggplot(data = bike) +
geom_bar(mapping = aes(weather, fill = weather)) +
labs(title = "Counts of types of Weather",
x = "Weather Type")
weather_boxplot <- ggplot(data = bike) +
geom_boxplot(mapping = aes(x = weather, y = count, fill = weather))
(correlation_plot + temp_graph) / (weather_boxplot + weather_counts)
bike <- vroom("./train.csv") %>%
mutate(weather = as.factor(weather),
season = as.factor(season))
season_boxplot <- ggplot(data = bike) +
geom_boxplot(mapping = aes(x = season, y = count, fill = season))
season_boxplot
temp_counts <- ggplot(bike) +
geom_point(aes(x = temp, y = count))
temp_counts
temp_counts <- ggplot(bike) +
geom_point(aes(x = temp, y = count)) +
geom_smooth()
temp_counts
temp_counts <- ggplot(bike, mapping = aes(x = temp, y = count)) +
geom_point() +
geom_smooth()
temp_counts
temp_counts <- ggplot(bike, mapping = aes(x = temp, y = count)) +
geom_point() +
geom_smooth() +
labs(title = "Number of bikes based on temperature",
x = "Temperature",
y = "Count")
(temp_counts + temp_graph) / (weather_boxplot + weather_counts)
weather_boxplot <- ggplot(data = bike) +
geom_boxplot(mapping = aes(x = weather, y = count, fill = weather)) +
labs(title = "Boxplot of Counts based on Weather")
(temp_counts + temp_graph) / (weather_boxplot + weather_counts)
